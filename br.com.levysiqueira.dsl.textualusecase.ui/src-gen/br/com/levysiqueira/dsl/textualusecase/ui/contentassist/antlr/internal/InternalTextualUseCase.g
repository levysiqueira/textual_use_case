/*
* generated by Xtext
*/
grammar InternalTextualUseCase;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package br.com.levysiqueira.dsl.textualusecase.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.com.levysiqueira.dsl.textualusecase.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import br.com.levysiqueira.dsl.textualusecase.services.TextualUseCaseGrammarAccess;

}

@parser::members {
 
 	private TextualUseCaseGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TextualUseCaseGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleUseCaseModel
entryRuleUseCaseModel 
:
{ before(grammarAccess.getUseCaseModelRule()); }
	 ruleUseCaseModel
{ after(grammarAccess.getUseCaseModelRule()); } 
	 EOF 
;

// Rule UseCaseModel
ruleUseCaseModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseCaseModelAccess().getGroup()); }
(rule__UseCaseModel__Group__0)
{ after(grammarAccess.getUseCaseModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleActor
entryRuleActor 
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAccess().getNameAssignment()); }
(rule__Actor__NameAssignment)
{ after(grammarAccess.getActorAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubject
entryRuleSubject 
:
{ before(grammarAccess.getSubjectRule()); }
	 ruleSubject
{ after(grammarAccess.getSubjectRule()); } 
	 EOF 
;

// Rule Subject
ruleSubject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubjectAccess().getGroup()); }
(rule__Subject__Group__0)
{ after(grammarAccess.getSubjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUseCase
entryRuleUseCase 
:
{ before(grammarAccess.getUseCaseRule()); }
	 ruleUseCase
{ after(grammarAccess.getUseCaseRule()); } 
	 EOF 
;

// Rule UseCase
ruleUseCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseCaseAccess().getGroup()); }
(rule__UseCase__Group__0)
{ after(grammarAccess.getUseCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getExpressionAssignment()); }
(rule__Condition__ExpressionAssignment)
{ after(grammarAccess.getConditionAccess().getExpressionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicFlow
entryRuleBasicFlow 
:
{ before(grammarAccess.getBasicFlowRule()); }
	 ruleBasicFlow
{ after(grammarAccess.getBasicFlowRule()); } 
	 EOF 
;

// Rule BasicFlow
ruleBasicFlow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicFlowAccess().getGroup()); }
(rule__BasicFlow__Group__0)
{ after(grammarAccess.getBasicFlowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStep
entryRuleStep 
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStepAccess().getAlternatives()); }
(rule__Step__Alternatives)
{ after(grammarAccess.getStepAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getGroup()); }
(rule__Action__Group__0)
{ after(grammarAccess.getActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalStatement
entryRuleConditionalStatement 
:
{ before(grammarAccess.getConditionalStatementRule()); }
	 ruleConditionalStatement
{ after(grammarAccess.getConditionalStatementRule()); } 
	 EOF 
;

// Rule ConditionalStatement
ruleConditionalStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalStatementAccess().getGroup()); }
(rule__ConditionalStatement__Group__0)
{ after(grammarAccess.getConditionalStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopStatement
entryRuleLoopStatement 
:
{ before(grammarAccess.getLoopStatementRule()); }
	 ruleLoopStatement
{ after(grammarAccess.getLoopStatementRule()); } 
	 EOF 
;

// Rule LoopStatement
ruleLoopStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopStatementAccess().getGroup()); }
(rule__LoopStatement__Group__0)
{ after(grammarAccess.getLoopStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlternativeFlow
entryRuleAlternativeFlow 
:
{ before(grammarAccess.getAlternativeFlowRule()); }
	 ruleAlternativeFlow
{ after(grammarAccess.getAlternativeFlowRule()); } 
	 EOF 
;

// Rule AlternativeFlow
ruleAlternativeFlow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlternativeFlowAccess().getGroup()); }
(rule__AlternativeFlow__Group__0)
{ after(grammarAccess.getAlternativeFlowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInclude
entryRuleInclude 
:
{ before(grammarAccess.getIncludeRule()); }
	 ruleInclude
{ after(grammarAccess.getIncludeRule()); } 
	 EOF 
;

// Rule Include
ruleInclude
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeAccess().getGroup()); }
(rule__Include__Group__0)
{ after(grammarAccess.getIncludeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStepOrder
entryRuleStepOrder 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getStepOrderRule()); }
	 ruleStepOrder
{ after(grammarAccess.getStepOrderRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule StepOrder
ruleStepOrder
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStepOrderAccess().getAlternatives()); }
(rule__StepOrder__Alternatives)
{ after(grammarAccess.getStepOrderAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
(	RULE_ID)
{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
)
(
{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
(	RULE_ID)*
{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlternativeFlowName
entryRuleAlternativeFlowName 
:
{ before(grammarAccess.getAlternativeFlowNameRule()); }
	 ruleAlternativeFlowName
{ after(grammarAccess.getAlternativeFlowNameRule()); } 
	 EOF 
;

// Rule AlternativeFlowName
ruleAlternativeFlowName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getAlternativeFlowNameAccess().getIDTerminalRuleCall()); }
(	RULE_ID)
{ after(grammarAccess.getAlternativeFlowNameAccess().getIDTerminalRuleCall()); }
)
(
{ before(grammarAccess.getAlternativeFlowNameAccess().getIDTerminalRuleCall()); }
(	RULE_ID)*
{ after(grammarAccess.getAlternativeFlowNameAccess().getIDTerminalRuleCall()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDescription
entryRuleDescription 
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getDescriptionAccess().getAlternatives()); }
(rule__Description__Alternatives)
{ after(grammarAccess.getDescriptionAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getDescriptionAccess().getAlternatives()); }
(rule__Description__Alternatives)*
{ after(grammarAccess.getDescriptionAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Step__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepAccess().getActionParserRuleCall_0()); }
	ruleAction
{ after(grammarAccess.getStepAccess().getActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStepAccess().getConditionalStatementParserRuleCall_1()); }
	ruleConditionalStatement
{ after(grammarAccess.getStepAccess().getConditionalStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStepAccess().getLoopStatementParserRuleCall_2()); }
	ruleLoopStatement
{ after(grammarAccess.getStepAccess().getLoopStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStepAccess().getIncludeParserRuleCall_3()); }
	ruleInclude
{ after(grammarAccess.getStepAccess().getIncludeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StepOrder__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStepOrderAccess().getINTTerminalRuleCall_0()); }
(	RULE_INT)
{ after(grammarAccess.getStepOrderAccess().getINTTerminalRuleCall_0()); }
)
(
{ before(grammarAccess.getStepOrderAccess().getINTTerminalRuleCall_0()); }
(	RULE_INT)*
{ after(grammarAccess.getStepOrderAccess().getINTTerminalRuleCall_0()); }
)
)

    |(
(
{ before(grammarAccess.getStepOrderAccess().getSINGLE_CHARTerminalRuleCall_1()); }
(	RULE_SINGLE_CHAR)
{ after(grammarAccess.getStepOrderAccess().getSINGLE_CHARTerminalRuleCall_1()); }
)
(
{ before(grammarAccess.getStepOrderAccess().getSINGLE_CHARTerminalRuleCall_1()); }
(	RULE_SINGLE_CHAR)*
{ after(grammarAccess.getStepOrderAccess().getSINGLE_CHARTerminalRuleCall_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getDescriptionAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getDescriptionAccess().getIDTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getWSTerminalRuleCall_2()); }
	RULE_WS
{ after(grammarAccess.getDescriptionAccess().getWSTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getDescriptionAccess().getFullStopKeyword_3()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getDescriptionAccess().getCommaKeyword_4()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getQuestionMarkKeyword_5()); }

	'?' 

{ after(grammarAccess.getDescriptionAccess().getQuestionMarkKeyword_5()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getApostropheKeyword_6()); }

	'\'' 

{ after(grammarAccess.getDescriptionAccess().getApostropheKeyword_6()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getQuotationMarkKeyword_7()); }

	'"' 

{ after(grammarAccess.getDescriptionAccess().getQuotationMarkKeyword_7()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getHyphenMinusKeyword_8()); }

	'-' 

{ after(grammarAccess.getDescriptionAccess().getHyphenMinusKeyword_8()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getPlusSignKeyword_9()); }

	'+' 

{ after(grammarAccess.getDescriptionAccess().getPlusSignKeyword_9()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getEqualsSignKeyword_10()); }

	'=' 

{ after(grammarAccess.getDescriptionAccess().getEqualsSignKeyword_10()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getAsteriskKeyword_11()); }

	'*' 

{ after(grammarAccess.getDescriptionAccess().getAsteriskKeyword_11()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getLessThanSignKeyword_12()); }

	'<' 

{ after(grammarAccess.getDescriptionAccess().getLessThanSignKeyword_12()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getGreaterThanSignKeyword_13()); }

	'>' 

{ after(grammarAccess.getDescriptionAccess().getGreaterThanSignKeyword_13()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getLeftParenthesisKeyword_14()); }

	'(' 

{ after(grammarAccess.getDescriptionAccess().getLeftParenthesisKeyword_14()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getRightParenthesisKeyword_15()); }

	')' 

{ after(grammarAccess.getDescriptionAccess().getRightParenthesisKeyword_15()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getLeftCurlyBracketKeyword_16()); }

	'{' 

{ after(grammarAccess.getDescriptionAccess().getLeftCurlyBracketKeyword_16()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getRightCurlyBracketKeyword_17()); }

	'}' 

{ after(grammarAccess.getDescriptionAccess().getRightCurlyBracketKeyword_17()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getCommercialAtKeyword_18()); }

	'@' 

{ after(grammarAccess.getDescriptionAccess().getCommercialAtKeyword_18()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().getPercentSignKeyword_19()); }

	'%' 

{ after(grammarAccess.getDescriptionAccess().getPercentSignKeyword_19()); }
)

    |(
{ before(grammarAccess.getDescriptionAccess().get_Keyword_20()); }

	'_' 

{ after(grammarAccess.getDescriptionAccess().get_Keyword_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__UseCaseModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group__0__Impl
	rule__UseCaseModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getSubjectAssignment_0()); }
(rule__UseCaseModel__SubjectAssignment_0)
{ after(grammarAccess.getUseCaseModelAccess().getSubjectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCaseModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group__1__Impl
	rule__UseCaseModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getUseCaseModelAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCaseModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group__2__Impl
	rule__UseCaseModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getActorsKeyword_2()); }

	'actors' 

{ after(grammarAccess.getUseCaseModelAccess().getActorsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCaseModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group__3__Impl
	rule__UseCaseModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getUseCaseModelAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCaseModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group__4__Impl
	rule__UseCaseModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getActorAssignment_4()); }
(rule__UseCaseModel__ActorAssignment_4)
{ after(grammarAccess.getUseCaseModelAccess().getActorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCaseModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group__5__Impl
	rule__UseCaseModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getGroup_5()); }
(rule__UseCaseModel__Group_5__0)*
{ after(grammarAccess.getUseCaseModelAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCaseModel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group__6__Impl
	rule__UseCaseModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getUseCaseModelAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCaseModel__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getUseCaseAssignment_7()); }
(rule__UseCaseModel__UseCaseAssignment_7)*
{ after(grammarAccess.getUseCaseModelAccess().getUseCaseAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__UseCaseModel__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group_5__0__Impl
	rule__UseCaseModel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getUseCaseModelAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCaseModel__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCaseModel__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getActorAssignment_5_1()); }
(rule__UseCaseModel__ActorAssignment_5_1)
{ after(grammarAccess.getUseCaseModelAccess().getActorAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Subject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subject__Group__0__Impl
	rule__Subject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubjectAccess().getSubjectKeyword_0()); }

	'subject' 

{ after(grammarAccess.getSubjectAccess().getSubjectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subject__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubjectAccess().getNameAssignment_1()); }
(rule__Subject__NameAssignment_1)
{ after(grammarAccess.getSubjectAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UseCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__0__Impl
	rule__UseCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getUsecaseKeyword_0()); }

	'usecase' 

{ after(grammarAccess.getUseCaseAccess().getUsecaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__1__Impl
	rule__UseCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getNameAssignment_1()); }
(rule__UseCase__NameAssignment_1)
{ after(grammarAccess.getUseCaseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__2__Impl
	rule__UseCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getUseCaseAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__3__Impl
	rule__UseCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getDescriptionKeyword_3()); }

	'description' 

{ after(grammarAccess.getUseCaseAccess().getDescriptionKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__4__Impl
	rule__UseCase__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getDescriptionAssignment_4()); }
(rule__UseCase__DescriptionAssignment_4)
{ after(grammarAccess.getUseCaseAccess().getDescriptionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__5__Impl
	rule__UseCase__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getUseCaseAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__6__Impl
	rule__UseCase__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getActorsKeyword_6()); }

	'actors' 

{ after(grammarAccess.getUseCaseAccess().getActorsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__7__Impl
	rule__UseCase__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getActorAssignment_7()); }
(rule__UseCase__ActorAssignment_7)
{ after(grammarAccess.getUseCaseAccess().getActorAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__8__Impl
	rule__UseCase__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getGroup_8()); }
(rule__UseCase__Group_8__0)*
{ after(grammarAccess.getUseCaseAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__9__Impl
	rule__UseCase__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getSemicolonKeyword_9()); }

	';' 

{ after(grammarAccess.getUseCaseAccess().getSemicolonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__10__Impl
	rule__UseCase__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getGroup_10()); }
(rule__UseCase__Group_10__0)?
{ after(grammarAccess.getUseCaseAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__11__Impl
	rule__UseCase__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getBasicFlowAssignment_11()); }
(rule__UseCase__BasicFlowAssignment_11)
{ after(grammarAccess.getUseCaseAccess().getBasicFlowAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__12__Impl
	rule__UseCase__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getAlternativeFlowAssignment_12()); }
(rule__UseCase__AlternativeFlowAssignment_12)*
{ after(grammarAccess.getUseCaseAccess().getAlternativeFlowAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__13__Impl
	rule__UseCase__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getGroup_13()); }
(rule__UseCase__Group_13__0)?
{ after(grammarAccess.getUseCaseAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getRightCurlyBracketKeyword_14()); }

	'}' 

{ after(grammarAccess.getUseCaseAccess().getRightCurlyBracketKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}
































rule__UseCase__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group_8__0__Impl
	rule__UseCase__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getUseCaseAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getActorAssignment_8_1()); }
(rule__UseCase__ActorAssignment_8_1)
{ after(grammarAccess.getUseCaseAccess().getActorAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UseCase__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group_10__0__Impl
	rule__UseCase__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getPreConditionKeyword_10_0()); }

	'preCondition' 

{ after(grammarAccess.getUseCaseAccess().getPreConditionKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group_10__1__Impl
	rule__UseCase__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getPreConditionAssignment_10_1()); }
(rule__UseCase__PreConditionAssignment_10_1)
{ after(grammarAccess.getUseCaseAccess().getPreConditionAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getSemicolonKeyword_10_2()); }

	';' 

{ after(grammarAccess.getUseCaseAccess().getSemicolonKeyword_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseCase__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group_13__0__Impl
	rule__UseCase__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getPostConditionKeyword_13_0()); }

	'postCondition' 

{ after(grammarAccess.getUseCaseAccess().getPostConditionKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group_13__1__Impl
	rule__UseCase__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getPostConditionAssignment_13_1()); }
(rule__UseCase__PostConditionAssignment_13_1)
{ after(grammarAccess.getUseCaseAccess().getPostConditionAssignment_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseCase__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseCase__Group_13__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getSemicolonKeyword_13_2()); }

	';' 

{ after(grammarAccess.getUseCaseAccess().getSemicolonKeyword_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BasicFlow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicFlow__Group__0__Impl
	rule__BasicFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFlow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicFlowAccess().getNameAssignment_0()); }
(rule__BasicFlow__NameAssignment_0)
{ after(grammarAccess.getBasicFlowAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicFlow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicFlow__Group__1__Impl
	rule__BasicFlow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFlow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBasicFlowAccess().getStepsAssignment_1()); }
(rule__BasicFlow__StepsAssignment_1)
{ after(grammarAccess.getBasicFlowAccess().getStepsAssignment_1()); }
)
(
{ before(grammarAccess.getBasicFlowAccess().getStepsAssignment_1()); }
(rule__BasicFlow__StepsAssignment_1)*
{ after(grammarAccess.getBasicFlowAccess().getStepsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicFlow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicFlow__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFlow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicFlowAccess().getEndbasicKeyword_2()); }

	'endbasic' 

{ after(grammarAccess.getBasicFlowAccess().getEndbasicKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameAssignment_0()); }
(rule__Action__NameAssignment_0)
{ after(grammarAccess.getActionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_1()); }

	')' 

{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActionKeyword_2()); }

	'action' 

{ after(grammarAccess.getActionAccess().getActionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getActionAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__4__Impl
	rule__Action__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAgentAssignment_4()); }
(rule__Action__AgentAssignment_4)
{ after(grammarAccess.getActionAccess().getAgentAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__5__Impl
	rule__Action__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getActionAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__6__Impl
	rule__Action__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getDescriptionAssignment_6()); }
(rule__Action__DescriptionAssignment_6)
{ after(grammarAccess.getActionAccess().getDescriptionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getActionAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ConditionalStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalStatement__Group__0__Impl
	rule__ConditionalStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalStatementAccess().getNameAssignment_0()); }
(rule__ConditionalStatement__NameAssignment_0)
{ after(grammarAccess.getConditionalStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalStatement__Group__1__Impl
	rule__ConditionalStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalStatementAccess().getRightParenthesisKeyword_1()); }

	')' 

{ after(grammarAccess.getConditionalStatementAccess().getRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalStatement__Group__2__Impl
	rule__ConditionalStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalStatementAccess().getIfKeyword_2()); }

	'if' 

{ after(grammarAccess.getConditionalStatementAccess().getIfKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalStatement__Group__3__Impl
	rule__ConditionalStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalStatementAccess().getConditionAssignment_3()); }
(rule__ConditionalStatement__ConditionAssignment_3)
{ after(grammarAccess.getConditionalStatementAccess().getConditionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalStatement__Group__4__Impl
	rule__ConditionalStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalStatementAccess().getThenKeyword_4()); }

	'then' 

{ after(grammarAccess.getConditionalStatementAccess().getThenKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalStatement__Group__5__Impl
	rule__ConditionalStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConditionalStatementAccess().getStepsAssignment_5()); }
(rule__ConditionalStatement__StepsAssignment_5)
{ after(grammarAccess.getConditionalStatementAccess().getStepsAssignment_5()); }
)
(
{ before(grammarAccess.getConditionalStatementAccess().getStepsAssignment_5()); }
(rule__ConditionalStatement__StepsAssignment_5)*
{ after(grammarAccess.getConditionalStatementAccess().getStepsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalStatementAccess().getEndifKeyword_6()); }

	'endif' 

{ after(grammarAccess.getConditionalStatementAccess().getEndifKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__LoopStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopStatement__Group__0__Impl
	rule__LoopStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getNameAssignment_0()); }
(rule__LoopStatement__NameAssignment_0)
{ after(grammarAccess.getLoopStatementAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopStatement__Group__1__Impl
	rule__LoopStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getRightParenthesisKeyword_1()); }

	')' 

{ after(grammarAccess.getLoopStatementAccess().getRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopStatement__Group__2__Impl
	rule__LoopStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getLoopStatementAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopStatement__Group__3__Impl
	rule__LoopStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getConditionAssignment_3()); }
(rule__LoopStatement__ConditionAssignment_3)
{ after(grammarAccess.getLoopStatementAccess().getConditionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopStatement__Group__4__Impl
	rule__LoopStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getDoKeyword_4()); }

	'do' 

{ after(grammarAccess.getLoopStatementAccess().getDoKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopStatement__Group__5__Impl
	rule__LoopStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLoopStatementAccess().getStepsAssignment_5()); }
(rule__LoopStatement__StepsAssignment_5)
{ after(grammarAccess.getLoopStatementAccess().getStepsAssignment_5()); }
)
(
{ before(grammarAccess.getLoopStatementAccess().getStepsAssignment_5()); }
(rule__LoopStatement__StepsAssignment_5)*
{ after(grammarAccess.getLoopStatementAccess().getStepsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getEndwhileKeyword_6()); }

	'endwhile' 

{ after(grammarAccess.getLoopStatementAccess().getEndwhileKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AlternativeFlow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeFlow__Group__0__Impl
	rule__AlternativeFlow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getAlternativeKeyword_0()); }

	'alternative' 

{ after(grammarAccess.getAlternativeFlowAccess().getAlternativeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeFlow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeFlow__Group__1__Impl
	rule__AlternativeFlow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getNameAssignment_1()); }
(rule__AlternativeFlow__NameAssignment_1)
{ after(grammarAccess.getAlternativeFlowAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeFlow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeFlow__Group__2__Impl
	rule__AlternativeFlow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getToStepKeyword_2()); }

	'to step' 

{ after(grammarAccess.getAlternativeFlowAccess().getToStepKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeFlow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeFlow__Group__3__Impl
	rule__AlternativeFlow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getBranchingStepAssignment_3()); }
(rule__AlternativeFlow__BranchingStepAssignment_3)
{ after(grammarAccess.getAlternativeFlowAccess().getBranchingStepAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeFlow__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeFlow__Group__4__Impl
	rule__AlternativeFlow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getWhenKeyword_4()); }

	'when' 

{ after(grammarAccess.getAlternativeFlowAccess().getWhenKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeFlow__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeFlow__Group__5__Impl
	rule__AlternativeFlow__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getConditionAssignment_5()); }
(rule__AlternativeFlow__ConditionAssignment_5)
{ after(grammarAccess.getAlternativeFlowAccess().getConditionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeFlow__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeFlow__Group__6__Impl
	rule__AlternativeFlow__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getThenKeyword_6()); }

	'then' 

{ after(grammarAccess.getAlternativeFlowAccess().getThenKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeFlow__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeFlow__Group__7__Impl
	rule__AlternativeFlow__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAlternativeFlowAccess().getStepsAssignment_7()); }
(rule__AlternativeFlow__StepsAssignment_7)
{ after(grammarAccess.getAlternativeFlowAccess().getStepsAssignment_7()); }
)
(
{ before(grammarAccess.getAlternativeFlowAccess().getStepsAssignment_7()); }
(rule__AlternativeFlow__StepsAssignment_7)*
{ after(grammarAccess.getAlternativeFlowAccess().getStepsAssignment_7()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlternativeFlow__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlternativeFlow__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getEndflowKeyword_8()); }

	'endflow' 

{ after(grammarAccess.getAlternativeFlowAccess().getEndflowKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Include__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__0__Impl
	rule__Include__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getNameAssignment_0()); }
(rule__Include__NameAssignment_0)
{ after(grammarAccess.getIncludeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__1__Impl
	rule__Include__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getRightParenthesisKeyword_1()); }

	')' 

{ after(grammarAccess.getIncludeAccess().getRightParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__2__Impl
	rule__Include__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getIncludeKeyword_2()); }

	'include' 

{ after(grammarAccess.getIncludeAccess().getIncludeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__3__Impl
	rule__Include__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getUseCaseAssignment_3()); }
(rule__Include__UseCaseAssignment_3)
{ after(grammarAccess.getIncludeAccess().getUseCaseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getIncludeAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_0()); }
(rule__QualifiedName__Group_0__0)?
{ after(grammarAccess.getQualifiedNameAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
	rule__QualifiedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getStepOrderParserRuleCall_1()); }
	ruleStepOrder
{ after(grammarAccess.getQualifiedNameAccess().getStepOrderParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_2()); }
(rule__QualifiedName__Group_2__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedName__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_0__0__Impl
	rule__QualifiedName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getAlternativeFlowNameParserRuleCall_0_0()); }
	ruleAlternativeFlowName
{ after(grammarAccess.getQualifiedNameAccess().getAlternativeFlowNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_2__0__Impl
	rule__QualifiedName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getStepOrderParserRuleCall_2_1()); }
	ruleStepOrder
{ after(grammarAccess.getQualifiedNameAccess().getStepOrderParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseCaseModel__SubjectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getSubjectSubjectParserRuleCall_0_0()); }
	ruleSubject{ after(grammarAccess.getUseCaseModelAccess().getSubjectSubjectParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__ActorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getActorActorParserRuleCall_4_0()); }
	ruleActor{ after(grammarAccess.getUseCaseModelAccess().getActorActorParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__ActorAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getActorActorParserRuleCall_5_1_0()); }
	ruleActor{ after(grammarAccess.getUseCaseModelAccess().getActorActorParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCaseModel__UseCaseAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseModelAccess().getUseCaseUseCaseParserRuleCall_7_0()); }
	ruleUseCase{ after(grammarAccess.getUseCaseModelAccess().getUseCaseUseCaseParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getActorAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subject__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubjectAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getSubjectAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getUseCaseAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__DescriptionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getDescriptionDescriptionParserRuleCall_4_0()); }
	ruleDescription{ after(grammarAccess.getUseCaseAccess().getDescriptionDescriptionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__ActorAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getActorActorCrossReference_7_0()); }
(
{ before(grammarAccess.getUseCaseAccess().getActorActorNameParserRuleCall_7_0_1()); }
	ruleName{ after(grammarAccess.getUseCaseAccess().getActorActorNameParserRuleCall_7_0_1()); }
)
{ after(grammarAccess.getUseCaseAccess().getActorActorCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__ActorAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getActorActorCrossReference_8_1_0()); }
(
{ before(grammarAccess.getUseCaseAccess().getActorActorNameParserRuleCall_8_1_0_1()); }
	ruleName{ after(grammarAccess.getUseCaseAccess().getActorActorNameParserRuleCall_8_1_0_1()); }
)
{ after(grammarAccess.getUseCaseAccess().getActorActorCrossReference_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__PreConditionAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getPreConditionConditionParserRuleCall_10_1_0()); }
	ruleCondition{ after(grammarAccess.getUseCaseAccess().getPreConditionConditionParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__BasicFlowAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getBasicFlowBasicFlowParserRuleCall_11_0()); }
	ruleBasicFlow{ after(grammarAccess.getUseCaseAccess().getBasicFlowBasicFlowParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__AlternativeFlowAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getAlternativeFlowAlternativeFlowParserRuleCall_12_0()); }
	ruleAlternativeFlow{ after(grammarAccess.getUseCaseAccess().getAlternativeFlowAlternativeFlowParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseCase__PostConditionAssignment_13_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseCaseAccess().getPostConditionConditionParserRuleCall_13_1_0()); }
	ruleCondition{ after(grammarAccess.getUseCaseAccess().getPostConditionConditionParserRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ExpressionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getExpressionDescriptionParserRuleCall_0()); }
	ruleDescription{ after(grammarAccess.getConditionAccess().getExpressionDescriptionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFlow__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicFlowAccess().getNameBasicKeyword_0_0()); }
(
{ before(grammarAccess.getBasicFlowAccess().getNameBasicKeyword_0_0()); }

	'basic' 

{ after(grammarAccess.getBasicFlowAccess().getNameBasicKeyword_0_0()); }
)

{ after(grammarAccess.getBasicFlowAccess().getNameBasicKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFlow__StepsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicFlowAccess().getStepsStepParserRuleCall_1_0()); }
	ruleStep{ after(grammarAccess.getBasicFlowAccess().getStepsStepParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameStepOrderParserRuleCall_0_0()); }
	ruleStepOrder{ after(grammarAccess.getActionAccess().getNameStepOrderParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__AgentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAgentAgentCrossReference_4_0()); }
(
{ before(grammarAccess.getActionAccess().getAgentAgentNameParserRuleCall_4_0_1()); }
	ruleName{ after(grammarAccess.getActionAccess().getAgentAgentNameParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getActionAccess().getAgentAgentCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DescriptionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getDescriptionDescriptionParserRuleCall_6_0()); }
	ruleDescription{ after(grammarAccess.getActionAccess().getDescriptionDescriptionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalStatementAccess().getNameStepOrderParserRuleCall_0_0()); }
	ruleStepOrder{ after(grammarAccess.getConditionalStatementAccess().getNameStepOrderParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__ConditionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalStatementAccess().getConditionConditionParserRuleCall_3_0()); }
	ruleCondition{ after(grammarAccess.getConditionalStatementAccess().getConditionConditionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__StepsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalStatementAccess().getStepsStepParserRuleCall_5_0()); }
	ruleStep{ after(grammarAccess.getConditionalStatementAccess().getStepsStepParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getNameStepOrderParserRuleCall_0_0()); }
	ruleStepOrder{ after(grammarAccess.getLoopStatementAccess().getNameStepOrderParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__ConditionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getConditionConditionParserRuleCall_3_0()); }
	ruleCondition{ after(grammarAccess.getLoopStatementAccess().getConditionConditionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__StepsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getStepsStepParserRuleCall_5_0()); }
	ruleStep{ after(grammarAccess.getLoopStatementAccess().getStepsStepParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getNameAlternativeFlowNameParserRuleCall_1_0()); }
	ruleAlternativeFlowName{ after(grammarAccess.getAlternativeFlowAccess().getNameAlternativeFlowNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__BranchingStepAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getBranchingStepStepCrossReference_3_0()); }
(
{ before(grammarAccess.getAlternativeFlowAccess().getBranchingStepStepQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAlternativeFlowAccess().getBranchingStepStepQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getAlternativeFlowAccess().getBranchingStepStepCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__ConditionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getConditionConditionParserRuleCall_5_0()); }
	ruleCondition{ after(grammarAccess.getAlternativeFlowAccess().getConditionConditionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlternativeFlow__StepsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeFlowAccess().getStepsStepParserRuleCall_7_0()); }
	ruleStep{ after(grammarAccess.getAlternativeFlowAccess().getStepsStepParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Include__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getNameStepOrderParserRuleCall_0_0()); }
	ruleStepOrder{ after(grammarAccess.getIncludeAccess().getNameStepOrderParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Include__UseCaseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getUseCaseUseCaseCrossReference_3_0()); }
(
{ before(grammarAccess.getIncludeAccess().getUseCaseUseCaseIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getIncludeAccess().getUseCaseUseCaseIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getIncludeAccess().getUseCaseUseCaseCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SINGLE_CHAR : 'a'..'z';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


