/*
* generated by Xtext
*/
package br.com.levysiqueira.dsl.textualusecase.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import br.com.levysiqueira.dsl.textualusecase.services.TextualUseCaseGrammarAccess;

public class TextualUseCaseParser extends AbstractContentAssistParser {
	
	@Inject
	private TextualUseCaseGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected br.com.levysiqueira.dsl.textualusecase.ui.contentassist.antlr.internal.InternalTextualUseCaseParser createParser() {
		br.com.levysiqueira.dsl.textualusecase.ui.contentassist.antlr.internal.InternalTextualUseCaseParser result = new br.com.levysiqueira.dsl.textualusecase.ui.contentassist.antlr.internal.InternalTextualUseCaseParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAgentAccess().getAlternatives(), "rule__Agent__Alternatives");
					put(grammarAccess.getStepAccess().getAlternatives(), "rule__Step__Alternatives");
					put(grammarAccess.getStepOrderAccess().getAlternatives(), "rule__StepOrder__Alternatives");
					put(grammarAccess.getDescriptionAccess().getAlternatives(), "rule__Description__Alternatives");
					put(grammarAccess.getUseCaseModelAccess().getGroup(), "rule__UseCaseModel__Group__0");
					put(grammarAccess.getUseCaseModelAccess().getGroup_5(), "rule__UseCaseModel__Group_5__0");
					put(grammarAccess.getSubjectAccess().getGroup(), "rule__Subject__Group__0");
					put(grammarAccess.getUseCaseAccess().getGroup(), "rule__UseCase__Group__0");
					put(grammarAccess.getUseCaseAccess().getGroup_8(), "rule__UseCase__Group_8__0");
					put(grammarAccess.getUseCaseAccess().getGroup_10(), "rule__UseCase__Group_10__0");
					put(grammarAccess.getUseCaseAccess().getGroup_13(), "rule__UseCase__Group_13__0");
					put(grammarAccess.getBasicFlowAccess().getGroup(), "rule__BasicFlow__Group__0");
					put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
					put(grammarAccess.getConditionalStatementAccess().getGroup(), "rule__ConditionalStatement__Group__0");
					put(grammarAccess.getLoopStatementAccess().getGroup(), "rule__LoopStatement__Group__0");
					put(grammarAccess.getAlternativeFlowAccess().getGroup(), "rule__AlternativeFlow__Group__0");
					put(grammarAccess.getIncludeAccess().getGroup(), "rule__Include__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_0(), "rule__QualifiedName__Group_0__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_2(), "rule__QualifiedName__Group_2__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getUseCaseModelAccess().getSubjectAssignment_0(), "rule__UseCaseModel__SubjectAssignment_0");
					put(grammarAccess.getUseCaseModelAccess().getActorAssignment_4(), "rule__UseCaseModel__ActorAssignment_4");
					put(grammarAccess.getUseCaseModelAccess().getActorAssignment_5_1(), "rule__UseCaseModel__ActorAssignment_5_1");
					put(grammarAccess.getUseCaseModelAccess().getUseCaseAssignment_7(), "rule__UseCaseModel__UseCaseAssignment_7");
					put(grammarAccess.getActorAccess().getNameAssignment(), "rule__Actor__NameAssignment");
					put(grammarAccess.getSubjectAccess().getNameAssignment_1(), "rule__Subject__NameAssignment_1");
					put(grammarAccess.getUseCaseAccess().getNameAssignment_1(), "rule__UseCase__NameAssignment_1");
					put(grammarAccess.getUseCaseAccess().getDescriptionAssignment_4(), "rule__UseCase__DescriptionAssignment_4");
					put(grammarAccess.getUseCaseAccess().getActorAssignment_7(), "rule__UseCase__ActorAssignment_7");
					put(grammarAccess.getUseCaseAccess().getActorAssignment_8_1(), "rule__UseCase__ActorAssignment_8_1");
					put(grammarAccess.getUseCaseAccess().getPreConditionAssignment_10_1(), "rule__UseCase__PreConditionAssignment_10_1");
					put(grammarAccess.getUseCaseAccess().getBasicFlowAssignment_11(), "rule__UseCase__BasicFlowAssignment_11");
					put(grammarAccess.getUseCaseAccess().getAlternativeFlowAssignment_12(), "rule__UseCase__AlternativeFlowAssignment_12");
					put(grammarAccess.getUseCaseAccess().getPostConditionAssignment_13_1(), "rule__UseCase__PostConditionAssignment_13_1");
					put(grammarAccess.getConditionAccess().getExpressionAssignment(), "rule__Condition__ExpressionAssignment");
					put(grammarAccess.getBasicFlowAccess().getNameAssignment_0(), "rule__BasicFlow__NameAssignment_0");
					put(grammarAccess.getBasicFlowAccess().getStepsAssignment_1(), "rule__BasicFlow__StepsAssignment_1");
					put(grammarAccess.getActionAccess().getNameAssignment_0(), "rule__Action__NameAssignment_0");
					put(grammarAccess.getActionAccess().getAgentAssignment_4(), "rule__Action__AgentAssignment_4");
					put(grammarAccess.getActionAccess().getDescriptionAssignment_6(), "rule__Action__DescriptionAssignment_6");
					put(grammarAccess.getConditionalStatementAccess().getNameAssignment_0(), "rule__ConditionalStatement__NameAssignment_0");
					put(grammarAccess.getConditionalStatementAccess().getConditionAssignment_3(), "rule__ConditionalStatement__ConditionAssignment_3");
					put(grammarAccess.getConditionalStatementAccess().getStepsAssignment_5(), "rule__ConditionalStatement__StepsAssignment_5");
					put(grammarAccess.getLoopStatementAccess().getNameAssignment_0(), "rule__LoopStatement__NameAssignment_0");
					put(grammarAccess.getLoopStatementAccess().getConditionAssignment_3(), "rule__LoopStatement__ConditionAssignment_3");
					put(grammarAccess.getLoopStatementAccess().getStepsAssignment_5(), "rule__LoopStatement__StepsAssignment_5");
					put(grammarAccess.getAlternativeFlowAccess().getNameAssignment_1(), "rule__AlternativeFlow__NameAssignment_1");
					put(grammarAccess.getAlternativeFlowAccess().getBranchingStepAssignment_3(), "rule__AlternativeFlow__BranchingStepAssignment_3");
					put(grammarAccess.getAlternativeFlowAccess().getConditionAssignment_5(), "rule__AlternativeFlow__ConditionAssignment_5");
					put(grammarAccess.getAlternativeFlowAccess().getStepsAssignment_7(), "rule__AlternativeFlow__StepsAssignment_7");
					put(grammarAccess.getIncludeAccess().getNameAssignment_0(), "rule__Include__NameAssignment_0");
					put(grammarAccess.getIncludeAccess().getUseCaseAssignment_3(), "rule__Include__UseCaseAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			br.com.levysiqueira.dsl.textualusecase.ui.contentassist.antlr.internal.InternalTextualUseCaseParser typedParser = (br.com.levysiqueira.dsl.textualusecase.ui.contentassist.antlr.internal.InternalTextualUseCaseParser) parser;
			typedParser.entryRuleUseCaseModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TextualUseCaseGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TextualUseCaseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
